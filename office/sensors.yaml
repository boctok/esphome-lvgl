# sensors.yaml
globals:
  - id: innen_temp_wert
    type: float
    initial_value: '0.0'
  - id: aussen_temp_wert
    type: float
    initial_value: '0.0'
  - id: flur_temp_wert
    type: float
    initial_value: '0.0'
  - id: flur_humidity_wert
    type: float
    initial_value: '0.0'
  - id: dimmer_msgbox_active
    type: bool
    initial_value: 'false'

sensor:
  - platform: homeassistant
    entity_id: sensor.environment_sensor_temperature_sensor
    id: wz_temperature
    on_value:
      then:
        - lambda: |-
            id(innen_temp_wert) = x;
        - script.execute: update_temperatur_anzeige
  - platform: homeassistant
    entity_id: sensor.aussentemperatur
    id: outdoor_temperature
    on_value:
      then:
        - lambda: |-
            id(aussen_temp_wert) = x;
        - script.execute: update_temperatur_anzeige
  - platform: homeassistant
    entity_id: sensor.flur_temperatur_temperature
    id: flur_temperature_sensor
    on_value:
      then:
        - lambda: |-
            id(flur_temp_wert) = x;
        - script.execute: update_temperatur_anzeige
  - platform: homeassistant
    entity_id: sensor.flur_temperatur_humidity
    id: flur_humidity_sensor
    on_value:
      then:
        - lambda: |-
            id(flur_humidity_wert) = x;
        - script.execute: update_temperatur_anzeige
  - platform: wifi_signal
    name: "Wifi Signal Strength Icon"
    id: wifi_signal_sensor
    update_interval: 15s
    entity_category: "diagnostic"
    internal: true
    on_value:
      then:
        - script.execute: update_wifi_icon_display
  - platform: homeassistant
    id: wohnzimmer_stehlampe_brightness_sensor
    entity_id: light.wohnzimmer_stehlampe
    attribute: brightness
    internal: true
    on_value:
      - if:
          condition:
            lambda: 'return id(dimmer_msgbox_active).state;'
          then:
            - lvgl.slider.update:
                id: stehlampe_brightness_slider
                value: !lambda 'return x;'

text_sensor:
  - platform: homeassistant
    id: esphome_wetter_png_icon_id
    entity_id: sensor.wetter_icon
    internal: true
    on_value:
      then:
        - if:
            condition:
              lambda: return x == "icon_png_clear_night";
            then:
              - lvgl.image.update:
                  id: lvgl_weather_image_widget
                  src: icon_png_clear_night
            else:
              - if:
                  condition:
                    lambda: return x == "icon_png_cloudy";
                  then:
                    - lvgl.image.update:
                        id: lvgl_weather_image_widget
                        src: icon_png_cloudy
                  else:
                    - if:
                        condition:
                          lambda: return x == "icon_png_exceptional";
                        then:
                          - lvgl.image.update:
                              id: lvgl_weather_image_widget
                              src: icon_png_exceptional
                        else:
                          - if:
                              condition:
                                lambda: return x == "icon_png_fog";
                              then:
                                - lvgl.image.update:
                                    id: lvgl_weather_image_widget
                                    src: icon_png_fog
                              else:
                                - if:
                                    condition:
                                      lambda: return x == "icon_png_hail";
                                    then:
                                      - lvgl.image.update:
                                          id: lvgl_weather_image_widget
                                          src: icon_png_hail
                                    else:
                                      - if:
                                          condition:
                                            lambda: return x == "icon_png_lightning";
                                          then:
                                            - lvgl.image.update:
                                                id: lvgl_weather_image_widget
                                                src: icon_png_lightning
                                          else:
                                            - if:
                                                condition:
                                                  lambda: return x == "icon_png_lightning_rainy";
                                                then:
                                                  - lvgl.image.update:
                                                      id: lvgl_weather_image_widget
                                                      src: icon_png_lightning_rainy
                                                else:
                                                  - if:
                                                      condition:
                                                        lambda: return x == "icon_png_partlycloudy";
                                                      then:
                                                        - lvgl.image.update:
                                                            id: lvgl_weather_image_widget
                                                            src: icon_png_partlycloudy
                                                      else:
                                                        - if:
                                                            condition:
                                                              lambda: return x == "icon_png_pouring";
                                                            then:
                                                              - lvgl.image.update:
                                                                  id: lvgl_weather_image_widget
                                                                  src: icon_png_pouring
                                                            else:
                                                              - if:
                                                                  condition:
                                                                    lambda: return x == "icon_png_rainy";
                                                                  then:
                                                                    - lvgl.image.update:
                                                                        id: lvgl_weather_image_widget
                                                                        src: icon_png_rainy
                                                                  else:
                                                                    - if:
                                                                        condition:
                                                                          lambda: return x == "icon_png_snowy";
                                                                        then:
                                                                          - lvgl.image.update:
                                                                              id: lvgl_weather_image_widget
                                                                              src: icon_png_snowy
                                                                        else:
                                                                          - if:
                                                                              condition:
                                                                                lambda: return x == "icon_png_snowy_rainy";
                                                                              then:
                                                                                - lvgl.image.update:
                                                                                    id: lvgl_weather_image_widget
                                                                                    src: icon_png_snowy_rainy
                                                                              else:
                                                                                - if:
                                                                                    condition:
                                                                                      lambda: return x == "icon_png_sunny";
                                                                                    then:
                                                                                      - lvgl.image.update:
                                                                                          id: lvgl_weather_image_widget
                                                                                          src: icon_png_sunny
                                                                                    else:
                                                                                      - if:
                                                                                          condition:
                                                                                            lambda: return x == "icon_png_windy";
                                                                                          then:
                                                                                            - lvgl.image.update:
                                                                                                id: lvgl_weather_image_widget
                                                                                                src: icon_png_windy
                                                                                          else:
                                                                                            - if:
                                                                                                condition:
                                                                                                  lambda: return x == "icon_png_windy_variant";
                                                                                                then:
                                                                                                  - lvgl.image.update:
                                                                                                      id: lvgl_weather_image_widget
                                                                                                      src: icon_png_windy_variant
  - platform: homeassistant
    id: esphome_weather_forecast_home
    entity_id: sensor.wetter_deutsch
    internal: true
    on_value:
      then:
        - if:
            condition:
              lambda: return !x.empty();
            then:
              - lvgl.label.update:
                  id: weather_description
                  text: !lambda return x.c_str();

binary_sensor:
  - platform: homeassistant
    id: wohnzimmer_deckenlampe_status
    entity_id: light.wohnzimmer_deckenlampe
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wohnzimmer_deckenlampe_button
          state:
            checked: !lambda return x;
      - if:
          condition:
            lambda: return x;
          then:
            - lvgl.label.update:
                id: wohnzimmer_deckenlampe_icon
                text: $lightbulb
          else:
            - lvgl.label.update:
                id: wohnzimmer_deckenlampe_icon
                text: $lightbulb_off
  - platform: homeassistant
    id: office_scene_dimmed
    entity_id: binary_sensor.office_scene_dimmed
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_dimmed_button
          state:
            checked: !lambda return x;
  - platform: homeassistant
    id: wohnzimmer_stehlampe_status
    entity_id: light.wohnzimmer_stehlampe
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wohnzimmer_stehlampe_button
          state:
            checked: !lambda return x;
      - lambda: |-
          if (x) {
            lv_label_set_text(id(wohnzimmer_stehlampe_icon), "\U000F0335");
          } else {
            lv_label_set_text(id(wohnzimmer_stehlampe_icon), "\U000F0336");
          }
  - platform: homeassistant
    id: wz_lichtschalter_state_esphome
    entity_id: input_boolean.wz_lichtschalter # oder light.wz_lichtschalter je nach Steuerung
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wz_lichtschalter_button
          state:
            checked: !lambda return x;
      - lambda: |-
          if (x) {
            lv_label_set_text(id(wz_lichtschalter_icon), "\U000F0335");
          } else {
            lv_label_set_text(id(wz_lichtschalter_icon), "\U000F0336");
          }
  - platform: homeassistant
    id: office_3d_printer_power
    entity_id: switch.office_3d_printer_power
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: printer_power_button
          state:
            checked: !lambda return x;
  - platform: homeassistant
    id: wz_button_alt_state
    entity_id: light.wz_lichtschalter # Annahme, dieser steuert auch light.wz_lichtschalter
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: wz_button_alt # ID des Buttons "Wohnzimmer"
          state:
            checked: !lambda return x;
        - lambda: |-
            if (id(wz_button_alt_icon).is_valid()) {
              if (x) {
                lv_label_set_text(id(wz_button_alt_icon).get_obj(), "\U000F0335");
              } else {
                lv_label_set_text(id(wz_button_alt_icon).get_obj(), "\U000F0336");
              }
            }

script:
  - id: update_temperatur_anzeige
    then:
      - lvgl.label.update:
          id: temperatures
          text:
            format: "%d° / %d°"
            args:
              - '(int)round(id(innen_temp_wert))'
              - '(int)round(id(aussen_temp_wert))'
      - lvgl.label.update:
          id: outdoor_temp_large_label
          text: !lambda |-
            char temp_buf[20];
            float temp_val = id(aussen_temp_wert);
            if (isnan(temp_val)) { return std::string("--.-°C"); }
            snprintf(temp_buf, sizeof(temp_buf), "%.1f°C", temp_val);
            return std::string(temp_buf);
      - lvgl.label.update:
          id: flur_temp_value_label
          text: !lambda |-
            char temp_buf[20];
            float temp_val = id(flur_temp_wert);
            if (isnan(temp_val)) { return std::string("--.-°C"); }
            snprintf(temp_buf, sizeof(temp_buf), "%.1f°C", temp_val);
            return std::string(temp_buf);
      - lvgl.label.update:
          id: flur_humidity_value_label
          text: !lambda |-
            char temp_buf[20];
            float temp_val = id(flur_humidity_wert);
            if (isnan(temp_val)) { return std::string("--.-%%"); }
            snprintf(temp_buf, sizeof(temp_buf), "%.1f%%", temp_val);
            return std::string(temp_buf);
  - id: update_wifi_icon_display
    then:
      - lvgl.label.update:
          id: wifi_icon_label
          text: !lambda |-
            if (!network::is_connected()) {
              return std::string($wifi_off); 
            }
            if (id(wifi_signal_sensor).has_state()) {
              float rssi = id(wifi_signal_sensor).state;
              if (rssi >= -55) { return std::string($wifi_strength_4); }
              else if (rssi >= -65) { return std::string($wifi_strength_3); }
              else if (rssi >= -75) { return std::string($wifi_strength_2); }
              else if (rssi >= -85) { return std::string($wifi_strength_1); }
              else { return std::string($wifi_strength_outline); }
            }
            return std::string($wifi_off);
