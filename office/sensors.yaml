# sensors.yaml
globals:
  - id: innen_temp_wert
    type: float
    restore_value: no
    initial_value: 'NAN'
  - id: aussen_temp_wert
    type: float
    restore_value: no
    initial_value: 'NAN'
  - id: flur_humidity_wert
    type: float
    restore_value: no
    initial_value: 'NAN'

sensor:
  - platform: homeassistant
    id: ha_aussen_temp_sensor
    entity_id: sensor.outside_temperature_filtered
    internal: true
    on_value:
      - lambda: id(aussen_temp_wert) = x;
      - script.execute: update_temperatur_anzeige

  - platform: homeassistant
    id: ha_innen_temp_sensor
    entity_id: sensor.ble_temperature_erdgeschoss
    internal: true
    on_value:
      - lambda: id(innen_temp_wert) = x;
      - script.execute: update_temperatur_anzeige

  - platform: homeassistant
    id: ha_flur_humidity_sensor
    entity_id: sensor.ble_humidity_erdgeschoss
    internal: true
    on_value:
      - lambda: id(flur_humidity_wert) = x;
      - script.execute: update_temperatur_anzeige

  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: wifi_signal_sensor
    update_interval: 60s
    on_value:
      - script.execute: update_wifi_icon_display

text_sensor:
  - platform: homeassistant
    id: cover_wohnzimmer_links_state_tracker
    entity_id: cover.wohnzimmer_links
    internal: true
    on_value: # War on_state, on_value ist f√ºr text_sensor passender
      - if:
          condition:
            lambda: 'return x == "open";'
          then:
            - lvgl.widget.update:
                id: wz_blind_open_button # Diese ID muss in lvgl.yaml existieren
                state:
                  checked: true
            - lvgl.widget.update:
                id: wz_blind_close_button # Diese ID muss in lvgl.yaml existieren
                state:
                  checked: false
      - if:
          condition:
            lambda: 'return x == "closed";'
          then:
            - lvgl.widget.update:
                id: wz_blind_open_button
                state:
                  checked: false
            - lvgl.widget.update:
                id: wz_blind_close_button
                state:
                  checked: true
      - if:
          condition:
            or:
              - lambda: 'return x == "opening";'
              - lambda: 'return x == "closing";'
          then:
            - lvgl.widget.update:
                id: wz_blind_open_button
                state:
                  checked: false
            - lvgl.widget.update:
                id: wz_blind_close_button
                state:
                  checked: false

  - platform: homeassistant
    id: esphome_wetter_png_icon_id
    entity_id: sensor.wetter_icon
    internal: true
    on_value:
      then:
        - if:
            condition:
              lambda: return x == "icon_png_clear_night";
            then:
              - lvgl.image.update:
                  id: lvgl_weather_image_widget
                  src: icon_png_clear_night
            else:
              - if:
                  condition:
                    lambda: return x == "icon_png_cloudy";
                  then:
                    - lvgl.image.update:
                        id: lvgl_weather_image_widget
                        src: icon_png_cloudy
                  else:
                    - if:
                        condition:
                          lambda: return x == "icon_png_exceptional";
                        then:
                          - lvgl.image.update:
                              id: lvgl_weather_image_widget
                              src: icon_png_exceptional
                        else:
                          - if:
                              condition:
                                lambda: return x == "icon_png_fog";
                              then:
                                - lvgl.image.update:
                                    id: lvgl_weather_image_widget
                                    src: icon_png_fog
                              else:
                                - if:
                                    condition:
                                      lambda: return x == "icon_png_hail";
                                    then:
                                      - lvgl.image.update:
                                          id: lvgl_weather_image_widget
                                          src: icon_png_hail
                                    else:
                                      - if:
                                          condition:
                                            lambda: return x == "icon_png_lightning";
                                          then:
                                            - lvgl.image.update:
                                                id: lvgl_weather_image_widget
                                                src: icon_png_lightning
                                          else:
                                            - if:
                                                condition:
                                                  lambda: return x == "icon_png_lightning_rainy";
                                                then:
                                                  - lvgl.image.update:
                                                      id: lvgl_weather_image_widget
                                                      src: icon_png_lightning_rainy
                                                else:
                                                  - if:
                                                      condition:
                                                        lambda: return x == "icon_png_partlycloudy";
                                                      then:
                                                        - lvgl.image.update:
                                                            id: lvgl_weather_image_widget
                                                            src: icon_png_partlycloudy
                                                      else:
                                                        - if:
                                                            condition:
                                                              lambda: return x == "icon_png_pouring";
                                                            then:
                                                              - lvgl.image.update:
                                                                  id: lvgl_weather_image_widget
                                                                  src: icon_png_pouring
                                                            else:
                                                              - if:
                                                                  condition:
                                                                    lambda: return x == "icon_png_rainy";
                                                                  then:
                                                                    - lvgl.image.update:
                                                                        id: lvgl_weather_image_widget
                                                                        src: icon_png_rainy
                                                                  else:
                                                                    - if:
                                                                        condition:
                                                                          lambda: return x == "icon_png_snowy";
                                                                        then:
                                                                          - lvgl.image.update:
                                                                              id: lvgl_weather_image_widget
                                                                              src: icon_png_snowy
                                                                        else:
                                                                          - if:
                                                                              condition:
                                                                                lambda: return x == "icon_png_snowy_rainy";
                                                                              then:
                                                                                - lvgl.image.update:
                                                                                    id: lvgl_weather_image_widget
                                                                                    src: icon_png_snowy_rainy
                                                                              else:
                                                                                - if:
                                                                                    condition:
                                                                                      lambda: return x == "icon_png_sunny";
                                                                                    then:
                                                                                      - lvgl.image.update:
                                                                                          id: lvgl_weather_image_widget
                                                                                          src: icon_png_sunny
                                                                                    else:
                                                                                      - if:
                                                                                          condition:
                                                                                            lambda: return x == "icon_png_windy";
                                                                                          then:
                                                                                            - lvgl.image.update:
                                                                                                id: lvgl_weather_image_widget
                                                                                                src: icon_png_windy
                                                                                          else:
                                                                                            - if:
                                                                                                condition:
                                                                                                  lambda: return x == "icon_png_windy_variant";
                                                                                                then:
                                                                                                  - lvgl.image.update:
                                                                                                      id: lvgl_weather_image_widget
                                                                                                      src: icon_png_windy_variant
  - platform: homeassistant
    id: esphome_weather_forecast_home
    entity_id: sensor.wetter_deutsch
    internal: true
    on_value:
      then:
        - if:
            condition:
              lambda: return !x.empty();
            then:
              - lvgl.label.update:
                  id: weather_description
                  text: !lambda return x.c_str();
binary_sensor:
  - platform: homeassistant
    id: wz_lichtschalter_state_esphome
    entity_id: light.wz_lichtschalter
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wz_lichtschalter_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: wz_lichtschalter_icon # Diese ID muss in lvgl.yaml existieren
                text: $ceiling_group_on
          else:
            - lvgl.label.update:
                id: wz_lichtschalter_icon
                text: $ceiling_group_off

  - platform: homeassistant
    id: wohnzimmer_stehlampe_status
    entity_id: light.wohnzimmer_stehlampe
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wohnzimmer_stehlampe_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: wohnzimmer_stehlampe_icon # Diese ID muss in lvgl.yaml existieren
                text: $floor_lamp_on
          else:
            - lvgl.label.update:
                id: wohnzimmer_stehlampe_icon
                text: $floor_lamp_off

  - platform: homeassistant
    id: wohnzimmer_deckenlampe_status
    entity_id: light.wohnzimmer_deckenlampe
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wohnzimmer_deckenlampe_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: wohnzimmer_deckenlampe_icon # Diese ID muss in lvgl.yaml existieren
                text: $ceiling_on
          else:
            - lvgl.label.update:
                id: wohnzimmer_deckenlampe_icon
                text: $ceiling_off

  - platform: homeassistant
    id: esszimmertisch_status
    entity_id: light.esszimmer_esstisch
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: esszimmertisch_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: esszimmertisch_icon # Diese ID muss in lvgl.yaml existieren
                text: $ceiling_on
          else:
            - lvgl.label.update:
                id: esszimmertisch_icon
                text: $ceiling_off

  - platform: homeassistant
    id: esszimmer_stehlampe_status
    entity_id: light.esszimmer_stehlampe
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: esszimmer_stehlampe_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: esszimmer_stehlampe_icon # Diese ID muss in lvgl.yaml existieren
                text: $floor_lamp_variant_on
          else:
            - lvgl.label.update:
                id: esszimmer_stehlampe_icon
                text: $floor_lamp_variant_off

  - platform: homeassistant
    id: office_3d_printer_power
    entity_id: switch.office_3d_printer_power
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: printer_power_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: printer_power_icon # Diese ID muss in lvgl.yaml existieren
                text: $printer
          else:
            - lvgl.label.update:
                id: printer_power_icon
                text: $printer

  - platform: homeassistant
    id: wz_lichtschalter # Zweiter Sensor f√ºr light.wz_lichtschalter, steuert wz_button
    entity_id: light.wz_lichtschalter
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wz_button # Diese ID muss in lvgl.yaml existieren
          state:
            checked: !lambda 'return x;'
      - if:
          condition:
            lambda: 'return x;'
          then:
            - lvgl.label.update:
                id: wz_button_icon # Diese ID muss in lvgl.yaml existieren
                text: $lightbulb
          else:
            - lvgl.label.update:
                id: wz_button_icon
                text: $lightbulb

script:
  - id: update_temperatur_anzeige
    then:
      - lvgl.label.update:
          id: temperatures # Diese ID muss in lvgl.yaml existieren
          text: !lambda |-
            char buffer[20];
            float innen = id(innen_temp_wert).state;
            float aussen = id(aussen_temp_wert).state;
            if (isnan(innen) && isnan(aussen)) {
              sprintf(buffer, "--¬∞ / --¬∞");
            } else if (isnan(innen)) {
              sprintf(buffer, "--¬∞ / %.0f¬∞", round(aussen));
            } else if (isnan(aussen)) {
              sprintf(buffer, "%.0f¬∞ / --¬∞", round(innen));
            } else {
              sprintf(buffer, "%.0f¬∞ / %.0f¬∞", round(innen), round(aussen));
            }
            return buffer;
      - lvgl.label.update:
          id: outdoor_temp_large_label # Diese ID muss in lvgl.yaml existieren
          text: !lambda |-
            char temp_buf[20];
            float temp_val = id(aussen_temp_wert).state;
            if (isnan(temp_val)) { return std::string("--.-¬∞C"); }
            snprintf(temp_buf, sizeof(temp_buf), "%.1f¬∞C", temp_val);
            return std::string(temp_buf);
      - lvgl.label.update:
          id: flur_temp_value_label # Diese ID muss in lvgl.yaml existieren
          text: !lambda |-
            char temp_buf[20];
            float temp_val = id(innen_temp_wert).state;
            if (isnan(temp_val)) { return std::string("--.-¬∞C"); }
            snprintf(temp_buf, sizeof(temp_buf), "%.1f¬∞C", temp_val);
            return std::string(temp_buf);
      - lvgl.label.update:
          id: flur_humidity_value_label # Diese ID muss in lvgl.yaml existieren
          text: !lambda |-
            char temp_buf[20];
            float temp_val = id(flur_humidity_wert).state;
            if (isnan(temp_val)) { return std::string("--.-%"); }
            snprintf(temp_buf, sizeof(temp_buf), "%.1f%%", temp_val);
            return std::string(temp_buf);

  - id: update_wifi_icon_display
    then:
      - lambda: |-
          auto rssi = id(wifi_signal_sensor).state;
          if (id(wifi_icon_label).is_valid()) { // Diese ID muss in lvgl.yaml existieren
            if (isnan(rssi)) {
              id(wifi_icon_label).set_text($wifi_off);
            } else if (rssi > -67) {
              id(wifi_icon_label).set_text($wifi_strength_4);
            } else if (rssi > -70) {
              id(wifi_icon_label).set_text($wifi_strength_3);
            } else if (rssi > -80) {
              id(wifi_icon_label).set_text($wifi_strength_2);
            } else {
              id(wifi_icon_label).set_text($wifi_strength_1);
            }
          }
