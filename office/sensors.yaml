globals:
  - id: innen_temp_wert
    type: float
    initial_value: '0.0'
  - id: aussen_temp_wert
    type: float
    initial_value: '0.0'

sensor:
  - platform: homeassistant
    entity_id: sensor.environment_sensor_temperature_sensor
    id: wz_temperature
    on_value:
      then:
        - lambda: |-
            id(innen_temp_wert) = x;
        - script.execute: update_temperatur_anzeige

  - platform: homeassistant
    entity_id: sensor.aussentemperatur
    id: outdoor_temperature
    on_value:
      then:
        - lambda: |-
            id(aussen_temp_wert) = x;
        - script.execute: update_temperatur_anzeige

  - platform: wifi_signal
    name: "Wifi Signal Strength Icon"
    id: wifi_signal_sensor
    update_interval: 15s
    entity_category: "diagnostic"
    internal: true
    on_value:
      then:
        - script.execute: update_wifi_icon_display

binary_sensor:
  - platform: homeassistant
    id: office_scene_evening
    entity_id: binary_sensor.office_scene_evening
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_evening_button
          state:
            checked: !lambda return x;

  - platform: homeassistant
    id: office_scene_dimmed
    entity_id: binary_sensor.office_scene_dimmed
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_dimmed_button
          state:
            checked: !lambda return x;

  - platform: homeassistant
    id: office_scene_desk_call
    entity_id: binary_sensor.office_scene_desk_call
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_calls_button
          state:
            checked: !lambda return x;

  - platform: homeassistant
    id: office_scene_features
    entity_id: binary_sensor.office_scene_features
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_features_button
          state:
            checked: !lambda return x;

  - platform: homeassistant
    id: office_3d_printer_power
    entity_id: switch.office_3d_printer_power
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: printer_power_button
          state:
            checked: !lambda return x;

  - platform: homeassistant
    id: wz_lichtschalter
    entity_id: light.wz_lichtschalter
    publish_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: wz_button
          state:
            checked: !lambda return x;

   - platform: homeassistant
    id: wohnzimmer_stehlampe_status
    entity_id: light.wohnzimmer_stehlampe
    publish_initial_state: true
    on_state:
      - lvgl.widget.update:
          id: wohnzimmer_stehlampe_button
          state:
            checked: !lambda return x;
      - if:
          condition:
            lambda: return x;
          then:
            - lvgl.label.update:
                id: wohnzimmer_stehlampe_icon
                text: $lightbulb
          else:
            - lvgl.label.update:
                id: wohnzimmer_stehlampe_icon
                text: $lightbulb_off         

script:
  - id: update_temperatur_anzeige
    then:
      - lvgl.label.update:
          id: temperatures
          text:
            format: "%dÂ° / %dÂ°"
            args:
              - '(int)round(id(innen_temp_wert))'
              - '(int)round(id(aussen_temp_wert))'

  - id: update_wifi_icon_display
    then:
      - lvgl.label.update:
          id: wifi_icon_label
          text: !lambda |-
            if (!network::is_connected()) {
              return std::string("\U000F05AA");
            }
            if (id(wifi_signal_sensor).has_state()) {
              float rssi = id(wifi_signal_sensor).state;
              if (rssi >= -55) {
                return std::string("\U000F091F");
              } else if (rssi >= -65) {
                return std::string("\U000F091E");
              } else if (rssi >= -75) {
                return std::string("\U000F091D");
              } else if (rssi >= -85) {
                return std::string("\U000F091C");
              } else {
                return std::string("\U000F091B");
              }
            }
            return std::string("\U000F05AA");
